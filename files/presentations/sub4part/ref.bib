@InProceedings{beideman_et_al:LIPIcs.ICALP.2022.16,
  author =  {Beideman, Calvin and Chandrasekaran, Karthekeyan and Wang, Weihang},
  title = {{Counting and Enumerating Optimum Cut Sets for Hypergraph $k$-Partitioning Problems for Fixed k}},
  booktitle = {49th International Colloquium on Automata, Languages, and Programming (ICALP 2022)},
  pages = {16:1--16:18},
  series =  {Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =  {978-3-95977-235-8},
  ISSN =  {1868-8969},
  year =  {2022},
  volume =  {229},
  editor =  {Boja\'{n}czyk, Miko{\l}aj and Merelli, Emanuela and Woodruff, David P.},
  publisher = {Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address = {Dagstuhl, Germany},
  URL =   {https://drops.dagstuhl.de/opus/volltexte/2022/16357},
  URN =   {urn:nbn:de:0030-drops-163578},
  doi =   {10.4230/LIPIcs.ICALP.2022.16},
  annote =  {Keywords: hypergraphs, k-partitioning, counting, enumeration}
}

@inproceedings{confversion,
	abstract = { In this paper, we study the minimum k-partition problem of submodular functions, i.e., given a finite set V and a submodular function f: 2V → ℝ, computing a k-partition {V1,{\ldots}, Vk} of V with minimum . The problem is a natural generalization of the minimum k-cut problem in graphs and hypergraphs. It is known that the problem is NP-hard for general k, and solvable in polynomial time for k ≤ 3. In this paper, we construct the first polynomial-time algorithm for the minimum 4-partition problem. * Authors are ordered alphabetically. },
	author = {Tsuyoshi Hirayama and Yuhao Liu and Kazuhisa Makino and Ke Shi and Chao Xu},
	booktitle = {Proceedings of the 2023 Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)},
	doi = {10.1137/1.9781611977554.ch64},
	eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch64},
	pages = {1680-1691},
	title = {A Polynomial Time Algorithm for Finding a Minimum 4-Partition of a Submodular Function},
	url = {https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch64},
	bdsk-url-1 = {https://epubs.siam.org/doi/abs/10.1137/1.9781611977554.ch64},
	bdsk-url-2 = {https://doi.org/10.1137/1.9781611977554.ch64}}

@article{kawarabayashi_minimum_2020,
  title = {Minimum {Violation} {Vertex} {Maps} and {Their} {Applications} to {Cut} {Problems}},
  volume = {34},
  issn = {0895-4801, 1095-7146},
  url = {https://epubs.siam.org/doi/10.1137/19M1290899},
  doi = {10.1137/19M1290899},
  abstract = {The minimum violation problem asks for a vertex map from a digraph to a pattern digraph that minimizes violation, the total weight of the edges not mapped to an edge. We are interested in surjective mappings. We characterize all patterns where a minimum violation map that fixes some vertices can be computed in polynomial time. We also make progress in the case where we do not fix any vertex in the mapping, including when the digraph is disconnected, when the graph is in the variety of finite paths. Moreover, we obtain a dichotomy result for trees. We apply the result to some cut problems, including k-cut with size lower bounds and length bounded k-cuts.},
  language = {en},
  number = {4},
  urldate = {2022-04-10},
  journal = {SIAM Journal on Discrete Mathematics},
  author = {Kawarabayashi, Ken-ichi and Xu, Chao},
  month = jan,
  year = {2020},
  pages = {2183--2207},
  file = {Kawarabayashi and Xu - 2020 - Minimum Violation Vertex Maps and Their Applicatio.pdf:/Users/chaoxu/Zotero/storage/LIGHEL3A/Kawarabayashi and Xu - 2020 - Minimum Violation Vertex Maps and Their Applicatio.pdf:application/pdf},
}
@inproceedings{fox2019minimum,
  title={Minimum cut and minimum $k$-cut in hypergraphs via branching contractions},
  author={Fox, Kyle and Panigrahi, Debmalya and Zhang, Fred},
  booktitle={Proceedings of the Thirtieth Annual ACM-SIAM Symposium on Discrete Algorithms},
  pages={881--896},
  year={2019},
  organization={SIAM}
}
@INPROCEEDINGS{GLL2018,
  author={Gupta, Anupam and Lee, Euiwoong and Li, Jason},
  booktitle={2018 IEEE 59th Annual Symposium on Foundations of Computer Science (FOCS)}, 
  title={Faster Exact and Approximate Algorithms for k-Cut}, 
  year={2018},
  volume={},
  number={},
  pages={113-123},
  doi={10.1109/FOCS.2018.00020}}

@article{chekuri_minimum_2018,
  title = {Minimum {Cuts} and {Sparsification} in {Hypergraphs}},
  volume = {47},
  issn = {0097-5397, 1095-7111},
  url = {https://epubs.siam.org/doi/10.1137/18M1163865},
  doi = {10.1137/18M1163865},
  language = {en},
  number = {6},
  urldate = {2022-04-14},
  journal = {SIAM Journal on Computing},
  author = {Chekuri, Chandra and Xu, Chao},
  month = jan,
  year = {2018},
  pages = {2118--2156},
  file = {Chekuri and Xu - 2018 - Minimum Cuts and Sparsification in Hypergraphs.pdf:/Users/chaoxu/Zotero/storage/JVLZ4RX3/Chekuri and Xu - 2018 - Minimum Cuts and Sparsification in Hypergraphs.pdf:application/pdf},
}

@article{optimumkcut,
author = {Gupta, Anupam and Harris, David G. and Lee, Euiwoong and Li, Jason},
title = {Optimal Bounds for the $k$-Cut Problem},
year = {2021},
issue_date = {February 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {69},
number = {1},
issn = {0004-5411},
url = {https://doi.org/10.1145/3478018},
doi = {10.1145/3478018},
abstract = {In the k-cut problem, we want to find the lowest-weight set of edges whose deletion breaks a given (multi)graph into k connected components. Algorithms of Karger and Stein can solve this in roughly O(n2k) time. However, lower bounds from conjectures about the k-clique problem imply that Ω (n(1-o(1))k) time is likely needed. Recent results of Gupta, Lee, and Li have given new algorithms for general k-cut in n1.98k + O(1) time, as well as specialized algorithms with better performance for certain classes of graphs (e.g., for small integer edge weights).In this work, we resolve the problem for general graphs. We show that the Contraction Algorithm of Karger outputs any fixed k-cut of weight α λ k with probability Ωk(n-α k), where λ k denotes the minimum k-cut weight. This also gives an extremal bound of Ok(nk) on the number of minimum k-cuts and an algorithm to compute λ k with roughly nk polylog(n) runtime. Both are tight up to lower-order factors, with the algorithmic lower bound assuming hardness of max-weight k-clique.The first main ingredient in our result is an extremal bound on the number of cuts of weight less than 2 λk/k, using the Sunflower lemma. The second ingredient is a fine-grained analysis of how the graph shrinks—and how the average degree evolves—in the Karger process.},
journal = {J. ACM},
month = {nov},
articleno = {2},
numpages = {18},
keywords = {contraction algorithm, k-cut}
}

@article{chekuri_lp_2020,
  title = {{LP} {Relaxation} and {Tree} {Packing} for {Minimum} {$k$}-{Cut}},
  volume = {34},
  issn = {0895-4801, 1095-7146},
  url = {https://epubs.siam.org/doi/10.1137/19M1299359},
  doi = {10.1137/19M1299359},
  abstract = {Karger used spanning tree packings [D. R. Karger, J. ACM, 47 (2000), pp. 46-76] to derive a near linear-time randomized algorithm for the global minimum cut problem as well as a bound on the number of approximate minimum cuts. This is a different approach from his well-known random contraction algorithm [D. R. Karger, Random Sampling in Graph Optimization Problems, Ph.D. thesis, Stanford University, Stanford, CA, 1995, D. R. Karger and C. Stein, J. ACM, 43 (1996), pp. 601--640]. Thorup developed a fast deterministic algorithm for the minimum k-cut problem via greedy recursive tree packings [M. Thorup, Minimum k-way cuts via deterministic greedy tree packing, in Proceedings of the Fortieth Annual ACM Symposium on Theory of Computing, ACM, 2008, pp. 159--166]. In this paper we revisit properties of an LP relaxation for k-Cut proposed by Naor and Rabani [Tree packing and approximating k-cuts, in Proceedings of the Twelfth Annual ACM-SIAM Symposium on Discrete Algorithms, Vol. 103, SIAM, Philadelphia, 2001, pp. 26--27], and analyzed in [C. Chekuri, S. Guha, and J. Naor, SIAM J. Discrete Math., 20 (2006), pp. 261--271]. We show that the dual of the LP yields a tree packing that, when combined with an upper bound on the integrality gap for the LP, easily and transparently extends Karger's analysis for mincut to the k-cut problem. In addition to the simplicity of the algorithm and its analysis, this allows us to improve the running time of Thorup's algorithm by a factor of n. We also improve the bound on the number of {\textbackslash}alpha -approximate k-cuts. Second, we give a simple proof that the integrality gap of the LP is 2(1  -  1/n). Third, we show that an optimum solution to the LP relaxation, for all values of k, is fully determined by the principal sequence of partitions of the input graph. This allows us to relate the LP relaxation to the Lagrangean relaxation approach of Barahona [Oper. Res. Lett., 26 (2000), pp. 99--105] and Ravi and Sinha [European J. Oper. Res., 186 (2008), pp. 77--90]; it also shows that the idealized recursive tree packing considered by Thorup gives an optimum dual solution to the LP.},
  language = {en},
  number = {2},
  urldate = {2022-04-10},
  journal = {SIAM Journal on Discrete Mathematics},
  author = {Chekuri, Chandra and Quanrud, Kent and Xu, Chao},
  month = jan,
  year = {2020},
  keywords = {Approximation, K-cut, Minimum cut, Tree packing},
  pages = {1334--1353},
  file = {Chekuri et al. - 2020 - LP Relaxation and Tree Packing for Minimum \$k\$-Cut.pdf:/Users/chaoxu/Zotero/storage/XDUPHUTC/Chekuri et al. - 2020 - LP Relaxation and Tree Packing for Minimum \$k\$-Cut.pdf:application/pdf},
}

@article{beideman_multicriteria_2021,
  title = {Multicriteria cuts and size-constrained $k$-cuts in hypergraphs},
  issn = {0025-5610, 1436-4646},
  url = {https://link.springer.com/10.1007/s10107-021-01732-0},
  doi = {10.1007/s10107-021-01732-0},
  abstract = {We address counting and optimization variants of multicriteria global min-cut and size-constrained min-k-cut in hypergraphs. 1. For an r -rank n-vertex hypergraph endowed with t hyperedge-cost functions, we show that the number of multiobjective min-cuts is O(r 2tr n3t−1). In particular, this shows that the number of parametric min-cuts in constant rank hypergraphs for a constant number of criteria is strongly polynomial, thus resolving an open question by Aissi et al. (Math Program 154(1–2):3–28, 2015). In addition, we give randomized algorithms to enumerate all multiobjective min-cuts and all paretooptimal cuts in strongly polynomial-time.},
  language = {en},
  urldate = {2022-04-14},
  journal = {Mathematical Programming},
  author = {Beideman, Calvin and Chandrasekaran, Karthekeyan and Xu, Chao},
  month = nov,
  year = {2021},
  file = {Beideman et al. - 2021 - Multicriteria cuts and size-constrained k-cuts in .pdf:/Users/chaoxu/Zotero/storage/LB3LM35U/Beideman et al. - 2021 - Multicriteria cuts and size-constrained k-cuts in .pdf:application/pdf},
}

@inproceedings{CC2021,
author = {Chandrasekaran, Karthekeyan and Chekuri, Chandra},
title = {Min-Max Partitioning of Hypergraphs and Symmetric Submodular Functions},
year = {2021},
isbn = {9781611976465},
publisher = {Society for Industrial and Applied Mathematics},
address = {USA},
abstract = {We consider the complexity of minmax partitioning of graphs, hypergraphs and (symmetric) submodular functions. Our main result is an algorithm for the problem of partitioning the ground set of a given symmetric submodular function f : 2V → R into k non-empty parts V1, V2, …, Vk to minimize [EQUATION]. Our algorithm runs in nO(k2)T time, where n = |V| and T is the time to evaluate f on a given set; hence, this yields a polynomial time algorithm for any fixed k in the evaluation oracle model. As an immediate corollary, for any fixed k, there is a polynomial-time algorithm for the problem of partitioning the vertex set of a given hypergraph H = (V, E) into k non-empty parts to minimize the maximum capacity of the parts. The complexity of this problem, termed Minmax-Hypergraph-k-Part, was raised by Lawler in 1973 [16]. In contrast to our positive result, the reduction in [6] implies that when k is part of the input, Minmax-Hypergraph-k-Part is hard to approximate to within an almost polynomial factor under the Exponential Time Hypothesis (ETH).},
booktitle = {Proceedings of the Thirty-Second Annual ACM-SIAM Symposium on Discrete Algorithms},
pages = {1026–1038},
numpages = {13},
location = {Virtual Event, Virginia},
series = {SODA '21}
}


@article{Queyranne1998,
  title = {Minimizing Symmetric Submodular Functions},
  author = {Queyranne, Maurice},
  year = {1998},
  journal = {Mathematical Programming},
  volume = {82},
  number = {1},
  pages = {3--12},
  issn = {0025-5610},
  doi = {10.1007/BF01585863},
  abstract = {We describe a purely combinatorial algorithm which, given a submodular set functionf on a finite setV, finds a nontrivial subsetA ofV minimizingf[A] + f[V \textbackslash{} A]. This algorithm, an extension of the Nagamochi\textemdash Ibaraki minimum cut algorithm as simplified by Stoer and Wagner [M. Stoer, F. Wagner, A simple min cut algorithm, Proceedings of the European Symposium on Algorithms ESA '94, LNCS 855, Springer, Berlin, 1994, pp. 141\textendash 147] and by Frank [A. Frank, On the edge-connectivity algorithm of Nagamochi and Ibaraki, Laboratoire Art\'emis, IMAG, Universit\'e J. Fourier, Grenbole, 1994], minimizes any symmetric submodular function using O(|V|3) calls to a function value oracle. \textcopyright{} 1998 The Mathematical Programming Society, Inc. Published by Elsevier Science B.V.},
  isbn = {0-89871-349-8},
  keywords = {submodular function minimiza-,submodular functions,submodular systems,symmetric submodular function minimization,symmetric submodular functions,tion},
  file = {/Users/chaoxu/Zotero/storage/ABY2KMBS/m-api-15074954-445f-89a1-1cc0-ec4eed8fdf99.pdf}
}



@INPROCEEDINGS{7354442,
  author={Lee, Yin Tat and Sidford, Aaron and Wong, Sam Chiu-Wai},
  booktitle={2015 IEEE 56th Annual Symposium on Foundations of Computer Science}, 
  title={A Faster Cutting Plane Method and its Implications for Combinatorial and Convex Optimization}, 
  year={2015},
  volume={},
  number={},
  pages={1049-1065},
  doi={10.1109/FOCS.2015.68}}
@article{Fukunaga,
  title = {Computing Minimum Multiway Cuts in Hypergraphs},
  author = {Fukunaga, Takuro},
  year = {2013},
  month = nov,
  journal = {Discrete Optimization},
  volume = {10},
  number = {4},
  pages = {371--382},
  publisher = {{Elsevier B.V.}},
  issn = {15725286},
  doi = {10.1016/j.disopt.2013.10.002},
  abstract = {The hypergraph k-cut problem is the problem of finding a minimum capacity set of hyperedges whose removal divides a given hypergraph into at least k connected components. We present an algorithm for this problem, that runs in strongly polynomial time if both k and the maximum size of the hyperedges are constants. Our algorithm extends the algorithm proposed by Thorup (2008) for computing minimum k-cuts of graphs from greedy packings of spanning trees. \textcopyright{} 2013 Elsevier B.V. All rights reserved.},
  isbn = {3642130356},
  file = {/Users/chaoxu/Zotero/storage/JVYVRW35/2013-Computing_minimum_multiway_cuts_in_hypergraphs.pdf}
}


@article{GVY,
  title = {Multiway Cuts in Node Weighted Graphs},
  author = {Garg, Naveen and Vazirani, Vijay V. and Yannakakis, Mihalis},
  year = {2004},
  month = jan,
  journal = {Journal of Algorithms},
  volume = {50},
  number = {1},
  pages = {49--61},
  issn = {01966774},
  doi = {10.1016/S0196-6774(03)00111-1},
  langid = {english}
}


@article{GJLH,
  title = {On the {{Complexity}} of {{Constructing Evolutionary Trees}}},
  author = {Gasieniec, Leszek and Jansson, Jesper and Lingas, Andrzej and {\"O}stlin, Anna},
  year = {1999},
  journal = {Journal of Combinatorial Optimization},
  volume = {3},
  number = {2/3},
  pages = {183--197},
  issn = {13826905},
  doi = {10.1023/A:1009833626004}
}





@inproceedings{CE,
  title = {Approximation {{Algorithms}} for {{Submodular Multiway Partition}}},
  booktitle = {2011 {{IEEE}} 52nd {{Annual Symposium}} on {{Foundations}} of {{Computer Science}}},
  author = {Chekuri, Chandra and Ene, Alina},
  year = {2011},
  month = oct,
  pages = {807--816},
  publisher = {{IEEE}},
  address = {{Palm Springs, CA, USA}},
  doi = {10.1109/FOCS.2011.34},
  isbn = {978-0-7695-4571-4 978-1-4577-1843-4}
}



@article{Okumoto2010,
  title = {Divide-and-{Conquer} {Algorithms} for {Partitioning} {Hypergraphs} and {Submodular} {Systems}},
  issn = {01784617},
  doi = {10.1007/s00453-010-9483-0},
  journal = {Algorithmica (New York)},
  author = {Okumoto, Kazumasa and Fukunaga, Takuro and Nagamochi, Hiroshi},
  year = {2010},
  note = {ISBN: 3642106307},
  keywords = {Submodular function, Divide-and-conquer algorithm, Hypergraph, Multicut},
  pages = {1--20},
  file = {PDF:/Users/chaoxu/Zotero/storage/LS8KQXRX/2010-Divide-and-Conquer_Algorithms_for_Partitioning_Hypergraphs_and_Submodular_Systems.pdf:application/pdf},
}

@inproceedings{Ghaffari2017,
	address = {Philadelphia, PA},
	title = {Random {Contractions} and {Sampling} for {Hypergraph} and {Hedge} {Connectivity}},
	isbn = {978-1-61197-478-2},
	url = {http://epubs.siam.org/doi/10.1137/1.9781611974782.71},
	doi = {10.1137/1.9781611974782.71},
	booktitle = {Proceedings of the {Twenty}-{Eighth} {Annual} {ACM}-{SIAM} {Symposium} on {Discrete} {Algorithms}},
	publisher = {Society for Industrial and Applied Mathematics},
	author = {Ghaffari, Mohsen and Karger, David R. and Panigrahi, Debmalya},
	month = jan,
	year = {2017},
	pages = {1101--1114},
	file = {PDF:/Users/chaoxu/Zotero/storage/FM8WNBSX/2017-Random_Contractions_and_Sampling_for_Hypergraph_and_Hedge_Connectivity.pdf:application/pdf},
}

@article{mak_fast_2000,
	title = {Fast hypergraph min-cut algorithm for circuit partitioning},
	volume = {30},
	issn = {01679260},
	doi = {10.1016/S0167-9260(00)00008-0},
	abstract = {Circuit partitioning is one of the central problems in VLSI system design. The primary objective of circuit partitioning is to minimize the number of interconnections between different components of the partitioned circuit. So the circuit partitioning problem is closely related to the minimum cut problem. Recently, two very fast algorithms for computing minimum cuts in graphs were reported. However, it is known that a circuit netlist cannot be accurately modeled by a graph, but only by a hypergraph. In this paper, we present the fastest algorithm known today for computing a minimum cut in a hypergraph which is a non-trivial extension of the result in Stoer and Wagner. Since the netlist of a circuit can be modeled naturally as a hypergraph, this opens the opportunity for finding very-high-quality solutions for the circuit partitioning problem. Unlike most minimum cut algorithms which rely on flow computations in a network, ours is a non-flow-based algorithm.},
	number = {1},
	journal = {Integration, the VLSI Journal},
	author = {Mak, Wai K. and Wong, D. F.},
	year = {2000},
	keywords = {minimum cut, hypergraph, circuit partitioning, flow-based algorithm, min-cut partitioning, non-, ow-},
	pages = {1--11},
	file = {PDF:/Users/chaoxu/Zotero/storage/VSP5SWMT/2000-Fast_hypergraph_min-cut_algorithm_for_circuit_partitioning.pdf:application/pdf},
}

@article{Queyranne1998,
	title = {Minimizing symmetric submodular functions},
	volume = {82},
	issn = {0025-5610},
	doi = {10.1007/BF01585863},
	abstract = {We describe a purely combinatorial algorithm which, given a submodular set functionf on a finite setV, finds a nontrivial subsetA ofV minimizingf[A] + f[V {\textbackslash} A]. This algorithm, an extension of the Nagamochi—Ibaraki minimum cut algorithm as simplified by Stoer and Wagner [M. Stoer, F. Wagner, A simple min cut algorithm, Proceedings of the European Symposium on Algorithms ESA '94, LNCS 855, Springer, Berlin, 1994, pp. 141–147] and by Frank [A. Frank, On the edge-connectivity algorithm of Nagamochi and Ibaraki, Laboratoire Artémis, IMAG, Université J. Fourier, Grenbole, 1994], minimizes any symmetric submodular function using O({\textbar}V{\textbar}3) calls to a function value oracle. © 1998 The Mathematical Programming Society, Inc. Published by Elsevier Science B.V.},
	number = {1},
	journal = {Mathematical Programming},
	author = {Queyranne, Maurice},
	year = {1998},
	note = {ISBN: 0-89871-349-8},
	keywords = {submodular functions, submodular function minimiza-, submodular systems, symmetric submodular function minimization, symmetric submodular functions, tion},
	pages = {3--12},
	file = {PDF:/Users/chaoxu/Zotero/storage/ABY2KMBS/m-api-15074954-445f-89a1-1cc0-ec4eed8fdf99.pdf:application/pdf},
}

@techreport{Klimmek1996,
	title = {A simple hypergraph min cut algorithm},
	number = {B 96-02},
	institution = {FU Berlin Fachbereich Mathematik und Informatik},
	author = {Klimmek, Regina and Wagner, Frank},
	year = {1996},
	file = {PDF:/Users/chaoxu/Zotero/storage/UP6FWG36/1996-A_simple_hypergraph_min_cut_algorithm.pdf:application/pdf},
}

@article{gupta_karger-stein_2019,
	title = {The {Karger}-{Stein} {Algorithm} is {Optimal} for \$k\$-cut},
	url = {http://arxiv.org/abs/1911.09165},
	abstract = {In the \$k\$-cut problem, we are given an edge-weighted graph and want to find the least-weight set of edges whose deletion breaks the graph into \$k\$ connected components. Algorithms due to Karger-Stein and Thorup showed how to find such a minimum \$k\$-cut in time approximately \$O(n{\textasciicircum}\{2k-2\})\$. The best lower bounds come from conjectures about the solvability of the \$k\$-clique problem and a reduction from \$k\$-clique to \$k\$-cut, and show that solving \$k\$-cut is likely to require time \${\textbackslash}Omega(n{\textasciicircum}k)\$. Our recent results have given special-purpose algorithms that solve the problem in time \$n{\textasciicircum}\{1.98k + O(1)\}\$, and ones that have better performance for special classes of graphs (e.g., for small integer weights). In this work, we resolve the problem for general graphs, by showing that for any fixed \$k {\textbackslash}geq 2\$, the Karger-Stein algorithm outputs any fixed minimum \$k\$-cut with probability at least \${\textbackslash}hat\{O\}(n{\textasciicircum}\{-k\})\$, where \${\textbackslash}hat\{O\}({\textbackslash}cdot)\$ hides a \$2{\textasciicircum}\{O({\textbackslash}ln {\textbackslash}ln n){\textasciicircum}2\}\$ factor. This also gives an extremal bound of \${\textbackslash}hat\{O\}(n{\textasciicircum}k)\$ on the number of minimum \$k\$-cuts in an \$n\$-vertex graph and an algorithm to compute a minimum \$k\$-cut in similar runtime. Both are tight up to \${\textbackslash}hat\{O\}(1)\$ factors. The first main ingredient in our result is a fine-grained analysis of how the graph shrinks---and how the average degree evolves---under the Karger-Stein process. The second ingredient is an extremal result bounding the number of cuts of size at most \$(2-{\textbackslash}delta) OPT/k\$, using the Sunflower lemma.},
	author = {Gupta, Anupam and Lee, Euiwoong and Li, Jason},
	year = {2019},
	note = {arXiv: 1911.09165},
	file = {PDF:/Users/chaoxu/Zotero/storage/NQICWCJJ/1911.09165.pdf:application/pdf},
}

@article{karger_new_1996,
	title = {A new approach to the minimum cut problem},
	url = {http://dl.acm.org/citation.cfm?id=234534},
	urldate = {2014-07-07},
	journal = {Journal of the ACM (JACM)},
	author = {Karger, DR and Stein, C},
	year = {1996},
	file = {PDF:/Users/chaoxu/Zotero/storage/UKIB7IR7/1996-A_new_approach_to_the_minimum_cut_problem.pdf:application/pdf},
}

@article{xiao_finding_2010,
  title = {Finding minimum 3-way cuts in hypergraphs},
  volume = {110},
  issn = {00200190},
  doi = {10.1016/j.ipl.2010.05.003},
  abstract = {The minimum 3-way cut problem in an edge-weighted hypergraph is to find a partition of the vertices into 3 nonempty sets minimizing the total weight of hyperedges that have at least two endpoints in two different sets. In this paper we show that a minimum 3-way cut in hypergraphs can be found by using O(n 3) hypergraph minimum (s, t) cut computations, where n is the number of vertices in the hypergraph. Our simple algorithm is the first polynomial-time algorithm for finding minimum 3-way cuts in hypergraphs. © 2010 Elsevier B.V. All rights reserved.},
  number = {14-15},
  journal = {Information Processing Letters},
  author = {Xiao, Mingyu},
  year = {2010},
  note = {ISBN: 3540792279},
  keywords = {Graph algorithms, K-way cut, Hypergraph},
  pages = {554--558},
  file = {PDF:/Users/chaoxu/Zotero/storage/5VWYQ497/2010-Finding_minimum_3-way_cuts_in_hypergraphs.pdf:application/pdf},
}

@inproceedings{Li.2021,
  title = {Deterministic Mincut in Almost-Linear Time},
  booktitle = {Proceedings of the 53rd {{Annual ACM SIGACT Symposium}} on {{Theory}} of {{Computing}}},
  author = {Li, Jason},
  year = {2021},
  month = jun,
  pages = {384--395},
  publisher = {{ACM}},
  address = {{Virtual Italy}},
  doi = {10.1145/3406325.3451114},
  abstract = {We present a deterministic (global) mincut algorithm for weighted, undirected graphs that runs in m1+o(1) time, answering an open question of Karger from the 1990s. To obtain our result, we derandomize the construction of the skeleton graph in Karger's nearlinear time mincut algorithm, which is its only randomized component. In particular, we partially de-randomize the well-known Benczur-Karger graph sparsification technique by random sampling, which we accomplish by the method of pessimistic estimators. Our main technical component is designing an efficient pessimistic estimator to capture the cuts of a graph, which involves harnessing the expander decomposition framework introduced in recent work by Goranci et al. (SODA 2021). As a side-effect, we obtain a structural representation of all approximate mincuts in a graph, which may have future applications.},
  isbn = {978-1-4503-8053-9},
  langid = {english},
  file = {/Users/chaoxu/Zotero/storage/XJKYEZ4G/Li - 2021 - Deterministic mincut in almost-linear time.pdf}
}

@article{Yeh2010,
  title = {Efficient Algorithms for the Problems of Enumerating Cuts by Non-Decreasing Weights},
  author = {Yeh, Li Pu and Wang, Biing Feng and Su, Hsin Hao},
  year = {2010},
  journal = {Algorithmica (New York)},
  volume = {56},
  number = {3},
  pages = {297--312},
  issn = {01784617},
  doi = {10.1007/s00453-009-9284-5},
  isbn = {0045300992},
  keywords = {Algorithms,Enumeration,Graphs,Maximum flows,Minimum cuts,Suboptimal cuts},
  file = {/Users/chaoxu/Zotero/storage/AMRNW6V4/2010-Efficient_algorithms_for_the_problems_of_enumerating_cuts_by_non-decreasing_weights.pdf}
}

@unpublished{GQ,
  author =       {Guinez, F. and Queyranne, M.},
  title =        {The Size-Constrained Submodular {$k$}-Partition Problem},
  note =         {Unpublished manuscript. See also \href{https://smartech.gatech.edu/bitstream/handle/1853/43309/Queyranne.pdf}{}},
  url = {https://docs.google.com/viewer?a=v&pid=sites&srcid=ZGVmYXVsdGRvbWFpbnxmbGF2aW9ndWluZXpob21lcGFnZXxneDo0NDVlMThkMDg4ZWRlOGI1},
  year =      {2012},
}

@inproceedings{VY,
  title={Suboptimal cuts: Their enumeration, weight and number},
  author={Vazirani, Vijay V and Yannakakis, Mihalis},
  booktitle={International Colloquium on Automata, Languages, and Programming},
  pages={366--377},
  year={1992},
  organization={Springer}
}

@article{NKI,
  title = {A {{Faster Algorithm}} for {{Computing Minimum}} 5-{{Way}} and 6-{{Way Cuts}} in {{Graphs}}},
  author = {Nagamochi, Hiroshi and Katayama, Shigeki and Ibaraki, Toshihide},
  year = {2000},
  journal = {Journal of Combinatorial Optimization},
  volume = {4},
  number = {2},
  pages = {151--169},
  issn = {13826905},
  doi = {10.1023/A:1009804919645},
  abstract = {\textcopyright{} Springer-Verlag Berlin Heidelberg 1999.For an edge-weighted graph G with n vertices and m edges, the minimum k-way cut problem is to find a partition of the vertex set into k non-empty subsets so that the weight sum of edges between different subsets is minimized. For this problem with k = 5 and 6, we present a deterministic algorithm that runs in O(nk-2(nF(n;m) + C2(n;m) + n2)) = O(mnk log(n2=m)) time, where F(n;m) and C2(n;m) denote respectively the time bounds required to solve the maximum flow prob- lem and the minimum 2-way cut problem in G. The bounds \~O(mn5) for k = 5 and \~O(mn6) for k = 6 improve the previous best randomized bounds \~O(n8) and \~O (n10), respectively.},
  isbn = {3540662006},
  keywords = {graphs,k -way cuts,minimum cuts,polynomial algorithm},
  file = {/Users/chaoxu/Zotero/storage/ZGVCXRJ7/Nagamochi, Katayama, Ibaraki - 2000 - A Faster Algorithm for Computing Minimum 5-Way and 6-Way Cuts in Graphs.pdf}
}
@InProceedings{OFN09,
author="Okumoto, Kazumasa
and Fukunaga, Takuro
and Nagamochi, Hiroshi",
editor="Dong, Yingfei
and Du, Ding-Zhu
and Ibarra, Oscar",
title="Divide-and-Conquer Algorithms for Partitioning Hypergraphs and Submodular Systems",
booktitle="Algorithms and Computation",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="55--64",
abstract="The submodular system k-partition problem is a problem of partitioning a given finite set V into k non-empty subsets V1,V2, ...,Vkso that {\$}{\backslash}sum{\_}{\{}i=1{\}}^k f(V{\_}i){\$}is minimized where f is a non-negative submodular function on V, and k is a fixed integer. This problem contains the hypergraph k-cut problem. In this paper, we design the first exact algorithm for k{\thinspace}={\thinspace}3 and approximation algorithms for k{\thinspace}≥{\thinspace}4. We also analyze the approximation factor for the hypergraph k-cut problem.",
isbn="978-3-642-10631-6"
}


@article{ZNI04,
title = {On generalized greedy splitting algorithms for multiway partition problems},
journal = {Discrete Applied Mathematics},
volume = {143},
number = {1},
pages = {130-143},
year = {2004},
issn = {0166-218X},
doi = {https://doi.org/10.1016/j.dam.2003.10.007},
url = {https://www.sciencedirect.com/science/article/pii/S0166218X04000149},
author = {Liang Zhao and Hiroshi Nagamochi and Toshihide Ibaraki},
keywords = {Approximation algorithm, -way cut, Multiterminal cut, Multiway partition problem, Submodular function},
abstract = {Given a system (V,T,f,k) where V is a finite set, T⊆V, f:2V→R is a submodular function and k⩾2 is an integer, the multiway partition problem (MPP) asks to find a k-partition P={V1,V2,…,Vk} of V that satisfies Vi∩T≠∅ for all i and minimizes f(V1)+f(V2)+⋯+f(Vk). This formulation captures a generalization of many NP-hard partition problems in graphs or hypergraphs. Previously, the authors have shown a simple framework for approximating MPPs by greedily increasing the size of partition by one. In this paper, we show that, if T=V, improved guarantees are available by greedily increasing the size by two. We also show polynomial time implementations for several problem classes.}
}
@article{Nagamochi,
 abstract = {In this paper, the author explains the recent evolution of algorithms for minimum partitioning problems in graphs. When the set of vertices of a graph having non-negative weights for edges is divided into k subsets, the set of edges for which both endpoints are contained in different subsets is called a k-way cut or k-cut. The problem of obtaining the k-way cut that minimizes the sum of the weights is an important research topic that appears in many practical applications such as VLSI design. In this paper, the author introduces recent results including cases in which sets of terminals or sets of terminal pairs that are to be separated are further specified in this problem and cases in which the objects to be partitioned are extended from graphs to hypergraphs or submodular set functions. © 2007 Wiley Periodicals, Inc. Electron Comm Jpn Pt 3, 90(10): 63– 78, 2007; Published online in Wiley InterScience (www.interscience.wiley.com). DOI 10.1002/ecjc.20341},
 author = {Nagamochi, Hiroshi},
 doi = {10.1002/ecjc.20341},
 journal = {Electronics and Communications in Japan (Part III Fundamental Electronic Science)},
 keywords = {},
 number = {10},
 pages = {63-78},
 title = {Algorithms for the minimum partitioning problems in graphs},
 url = {https://app.dimensions.ai/details/publication/pub.1049942158},
 volume = {90},
 year = {2007}
}



@article{ZNI05,
  title = {Greedy Splitting Algorithms for Approximating Multiway Partition Problems},
  author = {Zhao, Liang and Nagamochi, Hiroshi and Ibaraki, Toshihide},
  year = {2005},
  month = jan,
  journal = {Mathematical Programming},
  volume = {102},
  number = {1},
  pages = {167--183},
  issn = {0025-5610},
  doi = {10.1007/s10107-004-0510-2},
  isbn = {1010700405},
  keywords = {approximation algorithm,hypergraph partition,k -way cut,multiterminal cut,multiway,partition problem,submodular function},
  file = {/Users/chaoxu/Zotero/storage/GF6TFB4J/2005-Greedy_splitting_algorithms_for_approximating_multiway_partition_problems.pdf}
}



@article{NI00,
  title = {A Fast Algorithm for Computing Minimum 3-Way and 4-Way Cuts},
  author = {Nagamochi, Hiroshi and Ibaraki, Toshihide},
  year = {2000},
  journal = {Mathematical Programming},
  volume = {88},
  number = {3},
  pages = {507--520},
  issn = {0025-5610},
  doi = {10.1007/PL00011383},
  isbn = {3540660194},
  keywords = {graphs,hypergraphs,k-way cuts,minimum cuts,polynomial algorithm,submodular},
  file = {/Users/chaoxu/Zotero/storage/AYXLIELH/2000-A_fast_algorithm_for_computing_minimum_3-way_and_4-way_cuts.pdf}
}




@article{OFN,
  title = {Divide-and-{{Conquer Algorithms}} for {{Partitioning Hypergraphs}} and {{Submodular Systems}}},
  author = {Okumoto, Kazumasa and Fukunaga, Takuro and Nagamochi, Hiroshi},
  year = {2010},
  journal = {Algorithmica (New York)},
  pages = {1--20},
  issn = {01784617},
  doi = {10.1007/s00453-010-9483-0},
  isbn = {3642106307},
  keywords = {Divide-and-conquer algorithm,Hypergraph,Multicut,Submodular function},
  file = {/Users/chaoxu/Zotero/storage/LS8KQXRX/2010-Divide-and-Conquer_Algorithms_for_Partitioning_Hypergraphs_and_Submodular_Systems.pdf}
}



@article{NI92,
  title = {Computing Edge-Connectivity in Multigraphs and Capacitated Graphs},
  author = {Nagamochi, H and Ibaraki, T},
  year = {1992},
  journal = {SIAM Journal on Discrete Mathematics},
  volume = {5},
  number = {1},
  pages = {54--66},
  keywords = {05c40,1,68c25,a graph g,ams,capacitated networks,cuts,e,edge-connectivity,in this paper,introduction,maximum flows,minimum,mos,multi-,polynomial time algorithms,stands for an undirected,subject classifications,undirected multigraphs,v},
  file = {/Users/chaoxu/Zotero/storage/HNFEQ5F8/1992-Computing_edge-connectivity_in_multigraphs_and_capacitated_graphs.pdf}
}



@article{MW,
  title = {Fast Hypergraph Min-Cut Algorithm for Circuit Partitioning},
  author = {Mak, Wai K. and Wong, D. F.},
  year = {2000},
  journal = {Integration, the VLSI Journal},
  volume = {30},
  number = {1},
  pages = {1--11},
  issn = {01679260},
  doi = {10.1016/S0167-9260(00)00008-0},
  abstract = {Circuit partitioning is one of the central problems in VLSI system design. The primary objective of circuit partitioning is to minimize the number of interconnections between different components of the partitioned circuit. So the circuit partitioning problem is closely related to the minimum cut problem. Recently, two very fast algorithms for computing minimum cuts in graphs were reported. However, it is known that a circuit netlist cannot be accurately modeled by a graph, but only by a hypergraph. In this paper, we present the fastest algorithm known today for computing a minimum cut in a hypergraph which is a non-trivial extension of the result in Stoer and Wagner. Since the netlist of a circuit can be modeled naturally as a hypergraph, this opens the opportunity for finding very-high-quality solutions for the circuit partitioning problem. Unlike most minimum cut algorithms which rely on flow computations in a network, ours is a non-flow-based algorithm.},
  keywords = {circuit partitioning,flow-based algorithm,hypergraph,min-cut partitioning,minimum cut,non-,ow-},
  file = {/Users/chaoxu/Zotero/storage/VSP5SWMT/2000-Fast_hypergraph_min-cut_algorithm_for_circuit_partitioning.pdf}
}



@article{Lawler,
  title = {Cutsets and Partitions of Hypergraphs},
  author = {Lawler, E. L.},
  year = {1973},
  journal = {Networks},
  volume = {3},
  number = {3},
  pages = {275--285},
  issn = {10970037},
  doi = {10.1002/net.3230030306},
  abstract = {A hypergraph is a combinatorial structure with nodes and arcs, similar to an ordinary "linear" graph, except that arcs are incident to arbitrary subsets of nodes, instead of pairs of nodes. Cutsets of hypergraphs are defined in a natural way, and it is shown that optimal cutsets can be found by means of a network flow computation. The optimal cutset computation can be used to generate a family of subsets of nodes, which are called LS sets. Intuitively, an LS set is a subset of nodes that are more strongly connected to each other than to nodes in the complementary set. LS sets are useful for constructing optimal or near-optimal partitions of the nodes. A polynomial-bounded partitioning algorithm is presented, and various applications are suggested, including network analysis, information storage and retrieval, and packaging of electronic circuits.},
  file = {/Users/chaoxu/Zotero/storage/WQYG39FH/Lawler-1973-Networks.pdf}
}



@techreport{KW,
  title = {A Simple Hypergraph Min Cut Algorithm},
  author = {Klimmek, Regina and Wagner, Frank},
  year = {1996},
  number = {B 96-02},
  institution = {{FU Berlin Fachbereich Mathematik und Informatik}},
  file = {/Users/chaoxu/Zotero/storage/UP6FWG36/1996-A_simple_hypergraph_min_cut_algorithm.pdf}
}

@article{KYN,
  title = {A Deterministic Algorithm for Finding All Minimum $k$-Way Cuts.},
  author = {Kamidoi, Yoko and Yoshida, Noriyoshi and Nagamochi, Hiroshi},
  year = {2006},
  journal = {SIAM J. Comput.},
  volume = {36},
  number = {5},
  pages = {1329--1341},
  issn = {0097-5397; 1095-7111/e},
  doi = {10.1137/050631616},
  keywords = {050631616,05c85,1,10,1137,68r10,68w05,a subset f of,ams subject classifications,divide-and-conquer,doi,e,edges is,for an edge-weighted graph,g,introduction,minimum cut,multiway cut,v},
  file = {/Users/chaoxu/Zotero/storage/7MVBYVZV/Kamidoi, Yoshida, Nagamochi - 2006 - A deterministic algorithm for finding all minimum $k$-way cuts(2).pdf;/Users/chaoxu/Zotero/storage/HPZUGD5Q/2006-A_deterministic_algorithm_for_finding_all_minimum_k-way_cuts..pdf}
}




@article{GH,
  title = {A {{Polynomial Algorithm}} for the {$k$}-Cut {{Problem}} for {{Fixed}} {$k$}},
  author = {Goldschmidt, O. and Hochbaum, D. S.},
  year = {1994},
  journal = {Mathematics of Operations Research},
  volume = {19},
  pages = {24--37},
  issn = {0364-765X},
  doi = {10.1287/moor.19.1.24},
  abstract = {The k-cut problem is to find a partition of an edge weighted graph into k nonempty components, such that the total edge weight between components is minimum. This problem is NP-complete for arbitrary k and its version involving fixing a vertex in each component is NP hard even for k=3. A polynomial algorithm for the case of a fixed k is presented},
  isbn = {0-8186-0877-3},
  file = {/Users/chaoxu/Zotero/storage/SPDSEDJV/1994-A_Polynomial_Algorithm_for_the_k-cut_Problem_for_Fixed_k.pdf}
}



@article{YWS,
  title = {Efficient Algorithms for the Problems of Enumerating Cuts by Non-Decreasing Weights},
  author = {Yeh, Li Pu and Wang, Biing Feng and Su, Hsin Hao},
  year = {2010},
  journal = {Algorithmica (New York)},
  volume = {56},
  number = {3},
  pages = {297--312},
  issn = {01784617},
  doi = {10.1007/s00453-009-9284-5},
  isbn = {0045300992},
  keywords = {Algorithms,Enumeration,Graphs,Maximum flows,Minimum cuts,Suboptimal cuts},
  file = {/Users/chaoxu/Zotero/storage/AMRNW6V4/2010-Efficient_algorithms_for_the_problems_of_enumerating_cuts_by_non-decreasing_weights.pdf}
}


@article{Thorup,
  title = {Minimum $k$-Way Cuts via Deterministic Greedy Tree Packing},
  author = {Thorup, Mikkel},
  year = {2008},
  journal = {Proceedings of the 40th annual ACM Symposium on Theory of Computing},
  pages = {159--165},
  issn = {07378017},
  doi = {10.1145/1374376.1374402},
  isbn = {9781605580470},
  keywords = {k-way cuts,tree packing},
  file = {/Users/chaoxu/Zotero/storage/RW5GUTGW/2008-Minimum_k-way_cuts_via_deterministic_greedy_tree_packing.pdf}
}




@article{Xiao10,
  title = {Finding Minimum 3-Way Cuts in Hypergraphs},
  author = {Xiao, Mingyu},
  year = {2010},
  journal = {Information Processing Letters},
  volume = {110},
  number = {14-15},
  pages = {554--558},
  issn = {00200190},
  doi = {10.1016/j.ipl.2010.05.003},
  abstract = {The minimum 3-way cut problem in an edge-weighted hypergraph is to find a partition of the vertices into 3 nonempty sets minimizing the total weight of hyperedges that have at least two endpoints in two different sets. In this paper we show that a minimum 3-way cut in hypergraphs can be found by using O(n 3) hypergraph minimum (s, t) cut computations, where n is the number of vertices in the hypergraph. Our simple algorithm is the first polynomial-time algorithm for finding minimum 3-way cuts in hypergraphs. \textcopyright{} 2010 Elsevier B.V. All rights reserved.},
  isbn = {3540792279},
  keywords = {Graph algorithms,Hypergraph,K-way cut},
  file = {/Users/chaoxu/Zotero/storage/5VWYQ497/2010-Finding_minimum_3-way_cuts_in_hypergraphs.pdf}
}

@inproceedings{Xiao08,
	abstract = {Given a positive integer k and an edge-weighted undirected graph G{\thinspace}={\thinspace}(V,E;w), the minimum k-way cut problem is to find a subset of edges of minimum total weight whose removal separates the graph into k connected components. This problem is a natural generalization of the classical minimum cut problem and has been well-studied in the literature.},
	address = {Berlin, Heidelberg},
	author = {Xiao, Mingyu},
	booktitle = {Algorithms and Computation},
	editor = {Hong, Seok-Hee and Nagamochi, Hiroshi and Fukunaga, Takuro},
	isbn = {978-3-540-92182-0},
	pages = {208--219},
	publisher = {Springer Berlin Heidelberg},
	title = {An Improved Divide-and-Conquer Algorithm for Finding All Minimum k-Way Cuts},
	year = {2008}}



@inproceedings{Beide.C.W2022,
  title = {Deterministic Enumeration of All Minimum $k$-Cut-Sets in Hypergraphs for Fixed $k$},
  booktitle = {Proceedings of the 2022 {{Annual ACM-SIAM Symposium}} on {{Discrete Algorithms}} ({{SODA}})},
  author = {Beideman, Calvin and Chandrasekaran, Karthekeyan and Wang, Weihang},
  year = {2022},
  month = jan,
  pages = {2208--2228},
  publisher = {{Society for Industrial and Applied Mathematics}},
  address = {{Philadelphia, PA}},
  doi = {10.1137/1.9781611977073},
  abstract = {We consider the problem of deterministically enumerating all minimum k-cut-sets in a given hypergraph for any fixed k. The input here is a hypergraph G = (V, E) with non-negative hyperedge costs. A subset F {$\subseteq$} E of hyperedges is a k-cut-set if the number of connected components in G - F is at least k and it is a minimum k-cut-set if it has the least cost among all k-cut-sets. For fixed k, we call the problem of finding a minimum k-cut-set as Hypergraph-k-Cut and the problem of enumerating all minimum k-cut-sets as Enum-Hypergraph-k-Cut. The special cases of Hypergraph-k-Cut and Enum-Hypergraph-k-Cut restricted to graph inputs are well-known to be solvable in (randomized as well as deterministic) polynomial time [17,25,28,39]. In contrast, it is only recently that polynomial-time algorithms for Hypergraph-k-Cut were developed [2,3,12]. The randomized polynomial-time algorithm for Hypergraph-k-Cut that was designed in 2018 [3] showed that the number of minimum k-cut-sets in a hypergraph is O(n2k-2), where n is the number of vertices in the input hypergraph, and that they can all be enumerated in randomized polynomial time, thus resolving Enum-Hypergraph-k-Cut in randomized polynomial time. A deterministic polynomial-time algorithm for Hypergraph-k-Cut was subsequently designed in 2020 [2], but it is not guaranteed to enumerate all minimum k-cut-sets. In this work, we give the first deterministic polynomial-time algorithm to solve Enum-Hypergraph-k-Cut (this is non-trivial even for k = 2). Our algorithm is based on new structural results that allow for efficient recovery of all minimum k-cut-sets by solving minimum (S, T )-terminal cuts. Our techniques give new structural insights even for enumerating all minimum cut-sets (i.e., minimum 2-cut-sets) in a given hypergraph.},
  isbn = {978-1-61197-707-3},
  langid = {english},
  file = {/Users/chaoxu/Zotero/storage/UULIXCSR/Naor and Buchbinder - 2022 - Proceedings of the 2022 Annual ACM-SIAM Symposium .pdf}
}




@article{chandrasekaranHypergraphKcutRandomized2021,
  title = {Hypergraph $k$-Cut in Randomized Polynomial Time},
  author = {Chandrasekaran, Karthekeyan and Xu, Chao and Yu, Xilin},
  year = {2021},
  month = mar,
  journal = {Mathematical Programming},
  volume = {186},
  number = {1-2},
  pages = {85--113},
  issn = {0025-5610, 1436-4646},
  doi = {10.1007/s10107-019-01443-7},
  abstract = {For a fixed integer k {$\geq$} 2, the hypergraph k-cut problem asks for a smallest subset of hyperedges whose removal leads to at least k connected components in the remaining hypergraph. While graph k-cut is solvable efficiently (Goldschmidt and Hochbaum in Math. Oper. Res. 19(1):24\textendash 37, 1994), the complexity of hypergraph k-cut has been open. In this work, we present a randomized polynomial time algorithm to solve the hypergraph k-cut problem. Our algorithmic technique extends to solve the more general hedge k-cut problem when the subgraph induced by every hedge has a constant number of connected components. Our algorithm is based on random contractions akin to Karger's min cut algorithm. Our main technical contribution is a non-uniform distribution over the hedges (hyperedges) so that random contraction of hedges (hyperedges) chosen from the distribution succeeds in returning an optimum solution with large probability. In addition, we present an alternative contraction based randomized polynomial time approximation scheme for hedge k-cut in arbitrary hedgegraphs (i.e., hedgegraphs whose hedges could have a large number of connected components). Our algorithm and analysis also lead to bounds on the number of optimal solutions to the respective problems.},
  langid = {english},
  file = {/Users/chaoxu/Zotero/storage/E37UPS3X/Chandrasekaran et al. - 2021 - Hypergraph k-cut in randomized polynomial time.pdf}
}



@article{Chand.C2022,
  title = {Hypergraph {$k$}-{{Cut}} for {{Fixed}} {$k$} in {{Deterministic Polynomial Time}}},
  author = {Chandrasekaran, Karthekeyan and Chekuri, Chandra},
  year = {2022},
  month = mar,
  journal = {Mathematics of Operations Research},
  pages = {moor.2021.1250},
  issn = {0364-765X, 1526-5471},
  doi = {10.1287/moor.2021.1250},
  abstract = {We consider the Hypergraph-k-Cut problem. The input consists of a hypergraph [Formula: see text] with nonnegative hyperedge-costs [Formula: see text] and a positive integer k. The objective is to find a minimum cost subset [Formula: see text] such that the number of connected components in G \textendash{} F is at least k. An alternative formulation of the objective is to find a partition of V into k nonempty sets [Formula: see text] so as to minimize the cost of the hyperedges that cross the partition. Graph-k-Cut, the special case of Hypergraph-k-Cut obtained by restricting to graph inputs, has received considerable attention. Several different approaches lead to a polynomial-time algorithm for Graph-k-Cut when k is fixed, starting with the work of Goldschmidt and Hochbaum (Math of OR, 1994). In contrast, it is only recently that a randomized polynomial time algorithm for Hypergraph-k-Cut was developed (Chandrasekaran, Xu, Yu, Math Programming, 2019) via a subtle generalization of Karger's random contraction approach for graphs. In this work, we develop the first deterministic algorithm for Hypergraph-k-Cut that runs in polynomial time for any fixed k. We describe two algorithms both of which are based on a divide and conquer approach. The first algorithm is simpler and runs in [Formula: see text] time while the second one runs in [Formula: see text] time, where n is the number of vertices and m is the number of hyperedges in the input hypergraph. Our proof relies on new structural results that allow for efficient recovery of the parts of an optimum k-partition by solving minimum (S,T)-terminal cuts. Our techniques give new insights even for Graph-k-Cut.},
  langid = {english},
  file = {/Users/chaoxu/Zotero/storage/L2IHPJ75/Chandrasekaran and Chekuri - 2022 - Hypergraph k -Cut for Fixed k in Det.pdf}
}




@article{haoFasterAlgorithmFinding1994,
  title = {A {{Faster Algorithm}} for {{Finding}} the {{Minimum Cut}} in a {{Directed Graph}}},
  author = {Hao, J X and Orlin, J B},
  year = {1994},
  journal = {Journal of Algorithms},
  volume = {17},
  number = {3},
  pages = {424--446},
  issn = {0196-6774},
  doi = {http://dx.doi.org/10.1006/jagm.1994.1043},
  abstract = {We consider the problem of finding the minimum capacity cut in a directed network G with n nodes. This problem has applications to network reliability and survivability and is useful in subroutines for other network optimization problems. One can use a maximum flow problem to find a minimum cut separating a designated source node s from a designated sink node t, and by varying the sink node one can find a minimum cut in G as a sequence of at most 2n - 2 maximum flow problems. We then show how to reduce the running time of these 2n - 2 maximum flow algorithms to the running time for solving a single maximum flow problem. The resulting running time is O(nm log(n2/m)) for finding the minimum cut in either a directed or an undirected network.},
  file = {/Users/chaoxu/Zotero/storage/2XFY3Z7I/1994-A_Faster_Algorithm_for_Finding_the_Minimum_Cut_in_a_Directed_Graph.pdf}
}





